file: WHILE
##
## Ends in an error in state: 0.
##
## file' -> . file [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL WHILE
##
## Ends in an error in state: 6.
##
## decl_fct -> typ . IDENT LPAR loption(separated_nonempty_list(COMMA,param)) RPAR block [ VOID INT EOF BOOL ]
## typ -> typ . TIMES [ TIMES IDENT ]
##
## The known suffix of the stack is as follows:
## typ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT WHILE
##
## Ends in an error in state: 8.
##
## decl_fct -> typ IDENT . LPAR loption(separated_nonempty_list(COMMA,param)) RPAR block [ VOID INT EOF BOOL ]
##
## The known suffix of the stack is as follows:
## typ IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR WHILE
##
## Ends in an error in state: 9.
##
## decl_fct -> typ IDENT LPAR . loption(separated_nonempty_list(COMMA,param)) RPAR block [ VOID INT EOF BOOL ]
##
## The known suffix of the stack is as follows:
## typ IDENT LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR BOOL WHILE
##
## Ends in an error in state: 10.
##
## param -> typ . IDENT [ RPAR COMMA ]
## typ -> typ . TIMES [ TIMES IDENT ]
##
## The known suffix of the stack is as follows:
## typ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR BOOL IDENT WHILE
##
## Ends in an error in state: 13.
##
## separated_nonempty_list(COMMA,param) -> param . [ RPAR ]
## separated_nonempty_list(COMMA,param) -> param . COMMA separated_nonempty_list(COMMA,param) [ RPAR ]
##
## The known suffix of the stack is as follows:
## param
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR BOOL IDENT COMMA WHILE
##
## Ends in an error in state: 14.
##
## separated_nonempty_list(COMMA,param) -> param COMMA . separated_nonempty_list(COMMA,param) [ RPAR ]
##
## The known suffix of the stack is as follows:
## param COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR WHILE
##
## Ends in an error in state: 17.
##
## decl_fct -> typ IDENT LPAR loption(separated_nonempty_list(COMMA,param)) RPAR . block [ VOID INT EOF BOOL ]
##
## The known suffix of the stack is as follows:
## typ IDENT LPAR loption(separated_nonempty_list(COMMA,param)) RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG RPAR
##
## Ends in an error in state: 18.
##
## block -> BEG . list(decl_instr) END [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE EOF END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## BEG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG WHILE WHILE
##
## Ends in an error in state: 19.
##
## instr -> WHILE . LPAR expr RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## WHILE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG WHILE LPAR WHILE
##
## Ends in an error in state: 20.
##
## instr -> WHILE LPAR . expr RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## WHILE LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG TIMES WHILE
##
## Ends in an error in state: 22.
##
## desc -> TIMES . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG SIZEOF WHILE
##
## Ends in an error in state: 23.
##
## desc -> SIZEOF . LPAR typ RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## SIZEOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG SIZEOF LPAR WHILE
##
## Ends in an error in state: 24.
##
## desc -> SIZEOF LPAR . typ RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG SIZEOF LPAR BOOL WHILE
##
## Ends in an error in state: 25.
##
## desc -> SIZEOF LPAR typ . RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## typ -> typ . TIMES [ TIMES RPAR ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAR typ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG PLUS WHILE
##
## Ends in an error in state: 27.
##
## desc -> PLUS . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG NOT WHILE
##
## Ends in an error in state: 29.
##
## desc -> NOT . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG MINUS WHILE
##
## Ends in an error in state: 30.
##
## desc -> MINUS . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG LPAR WHILE
##
## Ends in an error in state: 31.
##
## desc -> LPAR . expr RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG INCR WHILE
##
## Ends in an error in state: 32.
##
## desc -> INCR . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## INCR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IDENT WHILE
##
## Ends in an error in state: 33.
##
## desc -> IDENT . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> IDENT . LPAR loption(separated_nonempty_list(COMMA,expr)) RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IDENT LPAR WHILE
##
## Ends in an error in state: 34.
##
## desc -> IDENT LPAR . loption(separated_nonempty_list(COMMA,expr)) RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## IDENT LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG DECR WHILE
##
## Ends in an error in state: 36.
##
## desc -> DECR . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## DECR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG AMP WHILE
##
## Ends in an error in state: 38.
##
## desc -> AMP . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## AMP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG AMP CST WHILE
##
## Ends in an error in state: 39.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> AMP expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## AMP expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LBRA WHILE
##
## Ends in an error in state: 40.
##
## desc -> expr LBRA . expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LBRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LBRA CST WHILE
##
## Ends in an error in state: 41.
##
## desc -> expr . LBRA expr RBRA [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr LBRA expr . RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LBRA expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST TIMES WHILE
##
## Ends in an error in state: 42.
##
## desc -> expr TIMES . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST TIMES CST WHILE
##
## Ends in an error in state: 43.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr TIMES expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr TIMES expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST PLUS WHILE
##
## Ends in an error in state: 48.
##
## desc -> expr PLUS . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST PLUS CST WHILE
##
## Ends in an error in state: 49.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr PLUS expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST MOD WHILE
##
## Ends in an error in state: 50.
##
## desc -> expr MOD . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST MOD CST WHILE
##
## Ends in an error in state: 51.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr MOD expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr MOD expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST DIV WHILE
##
## Ends in an error in state: 52.
##
## desc -> expr DIV . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST DIV CST WHILE
##
## Ends in an error in state: 53.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr DIV expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr DIV expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST OR WHILE
##
## Ends in an error in state: 54.
##
## desc -> expr OR . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr OR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST OR CST WHILE
##
## Ends in an error in state: 55.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr OR expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr OR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST NOT_EQUAL WHILE
##
## Ends in an error in state: 56.
##
## desc -> expr NOT_EQUAL . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr NOT_EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST NOT_EQUAL CST WHILE
##
## Ends in an error in state: 57.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr NOT_EQUAL expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr NOT_EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST MINUS WHILE
##
## Ends in an error in state: 58.
##
## desc -> expr MINUS . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST MINUS CST WHILE
##
## Ends in an error in state: 59.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr MINUS expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LESS_THAN WHILE
##
## Ends in an error in state: 60.
##
## desc -> expr LESS_THAN . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LESS_THAN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LESS_THAN CST WHILE
##
## Ends in an error in state: 61.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr LESS_THAN expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LESS_THAN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LESS_EQUAL WHILE
##
## Ends in an error in state: 62.
##
## desc -> expr LESS_EQUAL . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LESS_EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST LESS_EQUAL CST WHILE
##
## Ends in an error in state: 63.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr LESS_EQUAL expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr LESS_EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST GREATER_THAN WHILE
##
## Ends in an error in state: 64.
##
## desc -> expr GREATER_THAN . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr GREATER_THAN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST GREATER_THAN CST WHILE
##
## Ends in an error in state: 65.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr GREATER_THAN expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr GREATER_THAN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST GREATER_EQUAL WHILE
##
## Ends in an error in state: 66.
##
## desc -> expr GREATER_EQUAL . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr GREATER_EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST GREATER_EQUAL CST WHILE
##
## Ends in an error in state: 67.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr GREATER_EQUAL expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr GREATER_EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST EQUAL WHILE
##
## Ends in an error in state: 68.
##
## desc -> expr EQUAL . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST EQUAL CST WHILE
##
## Ends in an error in state: 69.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr EQUAL expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST AND WHILE
##
## Ends in an error in state: 70.
##
## desc -> expr AND . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST AND CST WHILE
##
## Ends in an error in state: 71.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr AND expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr AND expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST ASSIGN WHILE
##
## Ends in an error in state: 72.
##
## desc -> expr ASSIGN . expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST ASSIGN CST WHILE
##
## Ends in an error in state: 73.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr ASSIGN expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## expr ASSIGN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG DECR CST WHILE
##
## Ends in an error in state: 74.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> DECR expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## DECR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IDENT LPAR CST WHILE
##
## Ends in an error in state: 78.
##
## desc -> expr . LBRA expr RBRA [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## separated_nonempty_list(COMMA,expr) -> expr . [ RPAR ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAR ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IDENT LPAR CST COMMA WHILE
##
## Ends in an error in state: 79.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RPAR ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG INCR CST WHILE
##
## Ends in an error in state: 81.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> INCR expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## INCR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG LPAR CST WHILE
##
## Ends in an error in state: 82.
##
## desc -> expr . LBRA expr RBRA [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> LPAR expr . RPAR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## LPAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG MINUS CST WHILE
##
## Ends in an error in state: 84.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> MINUS expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG NOT CST WHILE
##
## Ends in an error in state: 85.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> NOT expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## NOT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG PLUS CST WHILE
##
## Ends in an error in state: 86.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> PLUS expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG TIMES CST WHILE
##
## Ends in an error in state: 87.
##
## desc -> TIMES expr . [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON RPAR RBRA PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR COMMA ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## TIMES expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG WHILE LPAR CST WHILE
##
## Ends in an error in state: 88.
##
## desc -> expr . LBRA expr RBRA [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## instr -> WHILE LPAR expr . RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## WHILE LPAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG WHILE LPAR CST RPAR VOID
##
## Ends in an error in state: 89.
##
## instr -> WHILE LPAR expr RPAR . instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## WHILE LPAR expr RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG RETURN WHILE
##
## Ends in an error in state: 91.
##
## instr -> RETURN . option(expr) SEMI_COLON [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## RETURN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG RETURN CST WHILE
##
## Ends in an error in state: 94.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## option(expr) -> expr . [ SEMI_COLON ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF WHILE
##
## Ends in an error in state: 95.
##
## instr -> IF . LPAR expr RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
## instr -> IF . LPAR expr RPAR instr ELSE instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF LPAR WHILE
##
## Ends in an error in state: 96.
##
## instr -> IF LPAR . expr RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
## instr -> IF LPAR . expr RPAR instr ELSE instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF LPAR CST WHILE
##
## Ends in an error in state: 97.
##
## desc -> expr . LBRA expr RBRA [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES RPAR PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## instr -> IF LPAR expr . RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
## instr -> IF LPAR expr . RPAR instr ELSE instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF LPAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF LPAR CST RPAR VOID
##
## Ends in an error in state: 98.
##
## instr -> IF LPAR expr RPAR . instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
## instr -> IF LPAR expr RPAR . instr ELSE instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF LPAR expr RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG FOR WHILE
##
## Ends in an error in state: 99.
##
## instr -> FOR . LPAR option(decl_var) SEMI_COLON option(expr) SEMI_COLON loption(separated_nonempty_list(COMMA,expr)) RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG FOR LPAR WHILE
##
## Ends in an error in state: 100.
##
## instr -> FOR LPAR . option(decl_var) SEMI_COLON option(expr) SEMI_COLON loption(separated_nonempty_list(COMMA,expr)) RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## FOR LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG BOOL WHILE
##
## Ends in an error in state: 101.
##
## decl_var -> typ . IDENT option(ass_var) [ SEMI_COLON ]
## typ -> typ . TIMES [ TIMES IDENT ]
##
## The known suffix of the stack is as follows:
## typ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG BOOL IDENT WHILE
##
## Ends in an error in state: 102.
##
## decl_var -> typ IDENT . option(ass_var) [ SEMI_COLON ]
##
## The known suffix of the stack is as follows:
## typ IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG BOOL IDENT ASSIGN WHILE
##
## Ends in an error in state: 103.
##
## ass_var -> ASSIGN . expr [ SEMI_COLON ]
##
## The known suffix of the stack is as follows:
## ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG BOOL IDENT ASSIGN CST WHILE
##
## Ends in an error in state: 104.
##
## ass_var -> ASSIGN expr . [ SEMI_COLON ]
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
##
## The known suffix of the stack is as follows:
## ASSIGN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG FOR LPAR SEMI_COLON WHILE
##
## Ends in an error in state: 108.
##
## instr -> FOR LPAR option(decl_var) SEMI_COLON . option(expr) SEMI_COLON loption(separated_nonempty_list(COMMA,expr)) RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## FOR LPAR option(decl_var) SEMI_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG FOR LPAR SEMI_COLON SEMI_COLON WHILE
##
## Ends in an error in state: 110.
##
## instr -> FOR LPAR option(decl_var) SEMI_COLON option(expr) SEMI_COLON . loption(separated_nonempty_list(COMMA,expr)) RPAR instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## FOR LPAR option(decl_var) SEMI_COLON option(expr) SEMI_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG FOR LPAR SEMI_COLON SEMI_COLON RPAR VOID
##
## Ends in an error in state: 112.
##
## instr -> FOR LPAR option(decl_var) SEMI_COLON option(expr) SEMI_COLON loption(separated_nonempty_list(COMMA,expr)) RPAR . instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## FOR LPAR option(decl_var) SEMI_COLON option(expr) SEMI_COLON loption(separated_nonempty_list(COMMA,expr)) RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CONTINUE WHILE
##
## Ends in an error in state: 113.
##
## instr -> CONTINUE . SEMI_COLON [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## CONTINUE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG BREAK WHILE
##
## Ends in an error in state: 115.
##
## instr -> BREAK . SEMI_COLON [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## BREAK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG CST WHILE
##
## Ends in an error in state: 118.
##
## desc -> expr . LBRA expr RBRA [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . ASSIGN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . INCR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DECR [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . NOT_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . LESS_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_THAN expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . GREATER_EQUAL expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . PLUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MINUS expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . TIMES expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . DIV expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . MOD expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . AND expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## desc -> expr . OR expr [ TIMES SEMI_COLON PLUS OR NOT_EQUAL MOD MINUS LESS_THAN LESS_EQUAL LBRA INCR GREATER_THAN GREATER_EQUAL EQUAL DIV DECR ASSIGN AND ]
## instr -> expr . SEMI_COLON [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF LPAR CST RPAR SEMI_COLON RPAR
##
## Ends in an error in state: 122.
##
## instr -> IF LPAR expr RPAR instr . [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
## instr -> IF LPAR expr RPAR instr . ELSE instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF LPAR expr RPAR instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG IF LPAR CST RPAR SEMI_COLON ELSE VOID
##
## Ends in an error in state: 123.
##
## instr -> IF LPAR expr RPAR instr ELSE . instr [ WHILE VOID TRUE TIMES SIZEOF SEMI_COLON RETURN PLUS NULL NOT MINUS LPAR INT INCR IF IDENT FOR FALSE END ELSE DECR CST CONTINUE BREAK BOOL BEG AMP ]
##
## The known suffix of the stack is as follows:
## IF LPAR expr RPAR instr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG SEMI_COLON RPAR
##
## Ends in an error in state: 131.
##
## list(decl_instr) -> decl_instr . list(decl_instr) [ END ]
##
## The known suffix of the stack is as follows:
## decl_instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: BOOL IDENT LPAR RPAR BEG END WHILE
##
## Ends in an error in state: 136.
##
## list(decl_fct) -> decl_fct . list(decl_fct) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl_fct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: INCLUDE WHILE
##
## Ends in an error in state: 138.
##
## list(includ) -> includ . list(includ) [ VOID INT EOF BOOL ]
##
## The known suffix of the stack is as follows:
## includ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

